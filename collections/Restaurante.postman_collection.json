{
	"info": {
		"_postman_id": "a5e754a6-265f-4873-a1b4-99d78751a358",
		"name": "Restaurante",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23051864"
	},
	"item": [
		{
			"name": "Crear un restaurante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"restaurante_id\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"L'Arpège MICHELIN\",\n    \"numeroEstrellas\": 5,\n    \"ciudad\": \"Paris\",\n    \"fechaConsecusionEstrellas\": \"1994-01-15\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/restaurantes",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes"
					]
				}
			},
			"response": [
				{
					"name": "201 Restaurante creado",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"L'Arpège MICHELIN\",\n    \"ciudad\": \"Paris\",\n    \"numeroEstrellas\": 5,\n    \"fechaConsecusionEstrellas\": \"15/01/1994\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/restaurantes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"restaurantes"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"nombre\": \"L'Arpège MICHELIN\",\n    \"ciudad\": \"Paris\",\n    \"numeroEstrellas\": 5,\n    \"fechaConsecusionEstrellas\": \"1994-01-15\"\n}"
				}
			]
		},
		{
			"name": "Crear un restaurante con datos invalidos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"",
							"pm.test(\"Status code is 400\", function () {",
							"   pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"L'Arpège MICHELIN\",\n    \"numeroEstrellas\": \"Paris\",\n    \"foto\": 5,\n    \"fechaConsecusionEstrellas\": \"15/01/1994\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/restaurantes",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes"
					]
				}
			},
			"response": [
				{
					"name": "414 Datos invalidos",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"\",\n    \"ciudad\": \"\",\n    \"numeroEstrellas\": 5,\n    \"fechaConsecusionEstrellas\": \"15/01/1994\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/restaurantes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"restaurantes"
							]
						}
					},
					"status": "Request-URI Too Long",
					"code": 414,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 414,\n    \"errors\": {\n        \"message\": \"No puede contener campos vacios\"\n    }\n}"
				}
			]
		},
		{
			"name": "Obtener todos los restaurantes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of restaurants > ' + 0, function () {",
							"   var data = pm.response.json()",
							"   pm.expect(data.length).to.greaterThan(0)",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurantes",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes"
					]
				}
			},
			"response": [
				{
					"name": "200 Listado",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/v1/restaurantes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"restaurantes"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "[\n{\n    \"id\": 1,\n    \"nombre\": \"L'Arpège MICHELIN\",\n    \"numeroEstrellas\": \"Paris\",\n    \"foto\": 5,\n    \"fechaConsecusionEstrellas\": \"15/01/1994\"\n},\n{\n    \"id\": 2,\n    \"nombre\": \"L'Arpège MICHELIN\",\n    \"numeroEstrellas\": \"Paris\",\n    \"foto\": 5,\n    \"fechaConsecusionEstrellas\": \"15/01/1994\"\n}\n]"
				}
			]
		},
		{
			"name": "Obtener todos los restaurantes sin datos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of restaurants > ' + 0, function () {",
							"   var data = pm.response.json()",
							"   pm.expect(data.length).to.greaterThan(0)",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurantes",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes"
					]
				}
			},
			"response": [
				{
					"name": "404 No se encuentran restaurantes",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/v1/restaurantes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"restaurantes"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"errors\": {\n        \"message\": \"No se encuentra el dato solicitado\"\n    }\n}"
				}
			]
		},
		{
			"name": "Obtener un restaurante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurantes/{{restaurante_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes",
						"{{restaurante_id}}"
					]
				}
			},
			"response": [
				{
					"name": "200 Restaurante encontrado",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/v1/restaurantes/{{restaurante_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"restaurantes",
								"{{restaurante_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"nombre\": \"L'Arpège MICHELIN\",\n    \"numeroEstrellas\": \"Paris\",\n    \"foto\": 5,\n    \"fechaConsecusionEstrellas\": \"15/01/1994\"\n}"
				}
			]
		},
		{
			"name": "Obtener un restaurante que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"Restaurante no encontrado\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurantes/no_encontrado",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes",
						"no_encontrado"
					]
				}
			},
			"response": [
				{
					"name": "404 No se encuentra el restaurante",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/v1/restaurantes/100",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"restaurantes",
								"100"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"Restaurante no encontrado\"\n}"
				}
			]
		},
		{
			"name": "Actualizar un restaurante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"L'Arpège MICHELIN\",\n    \"ciudad\": \"Paris\",\n    \"numeroEstrellas\": 5,\n    \"fechaConsecusionEstrellas\": \"1998-11-11\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/restaurantes/{{restaurante_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes",
						"{{restaurante_id}}"
					]
				}
			},
			"response": [
				{
					"name": "200 Restaurante actualizado",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"L'Arpège MICHELIN\",\n    \"ciudad\": \"Paris\",\n    \"numeroEstrellas\": 5,\n    \"fechaConsecusionEstrellas\": \"15/01/1998\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/restaurantes/{{restaurante_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"restaurantes",
								"{{restaurante_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"nombre\": \"L'Arpège MICHELIN\",\n    \"ciudad\": \"Paris\",\n    \"numeroEstrellas\": 5,\n    \"fechaConsecusionEstrellas\": \"15/01/1998\"\n}"
				}
			]
		},
		{
			"name": "Actualizar un restaurante que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"Restaurante no encontrado\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"L'Arpège MICHELIN\",\n    \"ciudad\": \"Paris\",\n    \"numeroEstrellas\": 5,\n    \"fechaConsecusionEstrellas\": \"1998-01-01\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/restaurantes/no_existe",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes",
						"no_existe"
					]
				}
			},
			"response": [
				{
					"name": "404 No se puede actualizar el restaurante",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"WAKANDA\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurantes/0000-0000-0000-0000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurantes",
								"0000-0000-0000-0000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"errors\": {\n        \"message\": \"No se encuentra el dato solicitado\"\n    }\n}"
				}
			]
		},
		{
			"name": "Borrar un restaurante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurantes/{{restaurante_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes",
						"{{restaurante_id}}"
					]
				}
			},
			"response": [
				{
					"name": "204 Restaurante eliminado",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurantes/{{restaurantes_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurantes",
								"{{restaurantes_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Borrar un restaurante que no se encuentra",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"Restaurante no encontrado\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurantes/no_registrado",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes",
						"no_registrado"
					]
				}
			},
			"response": [
				{
					"name": "404 No se encuentra el restaurante",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurantes/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurantes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"errors\": {\n        \"message\": \"No se encuentra el dato solicitado\"\n    }\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		}
	]
}